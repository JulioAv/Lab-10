$date
	Thu Nov 05 13:12:03 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 8 ! Y [7:0] $end
$var reg 12 " D1 [11:0] $end
$var reg 1 # clk $end
$var reg 1 $ enabled1 $end
$var reg 1 % enabled2 $end
$var reg 1 & load $end
$var reg 1 ' reset1 $end
$var reg 1 ( reset2 $end
$scope module F1 $end
$var wire 12 ) D1 [11:0] $end
$var wire 1 # clk $end
$var wire 1 * clk1 $end
$var wire 1 $ enabled1 $end
$var wire 1 % enabled2 $end
$var wire 1 & load $end
$var wire 1 ' reset1 $end
$var wire 1 ( reset2 $end
$var wire 8 + Y [7:0] $end
$var wire 12 , Q1 [11:0] $end
$var wire 8 - O [7:0] $end
$scope module p1 $end
$var wire 12 . D1 [11:0] $end
$var wire 1 * clk $end
$var wire 1 $ enabled1 $end
$var wire 1 & load $end
$var wire 1 ' reset1 $end
$var reg 12 / Q1 [11:0] $end
$upscope $end
$scope module p2 $end
$var wire 12 0 M [11:0] $end
$var wire 8 1 O [7:0] $end
$upscope $end
$scope module p3 $end
$var wire 8 2 D2 [7:0] $end
$var wire 1 # clk $end
$var wire 1 % enabled2 $end
$var wire 1 ( reset2 $end
$var reg 8 3 Q2 [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
z*
bx )
x(
x'
x&
x%
x$
x#
bx "
bx !
$end
#2
b0 !
b0 +
b0 3
b1000 -
b1000 1
b1000 2
b0 ,
b0 /
b0 0
b0 "
b0 )
b0 .
0#
1%
1$
0&
1(
1'
#3
b1000 !
b1000 +
b1000 3
0(
0'
1#
#4
0#
#5
1#
#6
0#
#7
1#
#8
0#
#9
1#
#10
0#
#11
1#
#12
0#
#13
1#
#14
0#
#15
1#
#16
0#
#17
1#
#18
0#
#19
1#
#20
0#
